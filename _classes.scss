@use "sass:math";

.#{$sfg-prefix}row-span, .#{$sfg-prefix}row {
	@include row();

	&.#{$sfg-prefix}reverse {
		@include row-reverse();
	}
}

.#{$sfg-prefix}col.#{$sfg-prefix}reverse {
  flex-direction: column-reverse;
}

@mixin generate-classes($map, $separator, $name) {
    .#{$sfg-prefix}row {
			@include row-gutter(map-get($map, gutter));

			&.no-gutter {
				margin-right: 0;
				margin-left: 0;
			}
		}

		[class^='#{$sfg-prefix}col#{$separator}'] {
			@include col-gutter(map-get($map, gutter));

			.no-gutter & {
				padding-right: 0;
				padding-left: 0;
			}
		}

		.#{$sfg-prefix}col#{$separator}#{$name} {
			flex-grow: 1;
			flex-basis: 0;
			max-width: 100%;
			box-sizing: border-box;
			box-flex: 0;
		}

    @for $i from 1 through map-get($map, columns) {
      .#{$sfg-prefix}col-#{$i}#{$separator}#{$name} {
				@include col(math.div($i, map-get($map, columns)), map-get($map, gutter));
      }

      .#{$sfg-prefix}col-offset-#{$i}#{$separator}#{$name} {
				@include offset(math.div($i, map-get($map, columns)));
      }
    }

    .#{$sfg-prefix}start#{$separator}#{$name} {
			@include start();
    }

    .#{$sfg-prefix}center#{$separator}#{$name} {
      @include center();
    }

    .#{$sfg-prefix}end#{$separator}#{$name} {
      @include end();
    }

    .#{$sfg-prefix}top#{$separator}#{$name} {
      @include top();
    }

    .#{$sfg-prefix}middle#{$separator}#{$name} {
      @include middle();
    }

    .#{$sfg-prefix}bottom#{$separator}#{$name} {
      @include bottom();
    }

    .#{$sfg-prefix}around#{$separator}#{$name} {
      @include around();
    }

    .#{$sfg-prefix}between#{$separator}#{$name} {
      @include between();
    }

    .#{$sfg-prefix}first#{$separator}#{$name} {
			@include first();
    }

    .#{$sfg-prefix}last#{$separator}#{$name} {
      @include last();
    }
}

@each $label, $map in $sfg-breakpoints {
	@if map-get($map, name) == default {
		// default classes
		@include generate-classes($map, '', '');
	} @else {
		// media query classes
		@include mq-class(map-get($map, min-width), map-get($map, max-width)) {
			@if map-get($map, name) != default {
				@include generate-classes($map, '-', map-get($map, name));
			}
		}
	}
}
